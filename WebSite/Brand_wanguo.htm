<!DOCTYPE html>
<html lang="en">
    <head>
        <link href="Content/bootstrap.min.css" rel="stylesheet" type="text/css" />
        <script src="Scripts/jquery-1.9.1.min.js" type="text/javascript"></script>
        <script src="Scripts/bootstrap.min.js"type="text/javascript"></script>
        <meta name="viewport" content="width=device-width" />
		<meta charset=utf-8 />

    </head>
    <body>
<div class="navbar navbar-fixed-top">
  <div class="navbar-inner">
    <a class="brand" href="index.htm">PBIDA</a>
    <ul class="nav nav-pills">
        <li class="span5"><a href=""></a></li>
        <li><a href="Brand.htm">Brand 品牌</a></li>
        <li><a href="Media.htm">Media 媒体</a></li>
        <li><a href="Consumer.htm">Consumer 用户</a></li>
        <li><a href="CloudTag.htm">TagCloud 热词云图</a></li>
        <li><a href="SummaryReport.htm">Summary Report报表</a></li>
    </ul>
  </div>
    </div>         
                 
<h2>Charts</h2>
<div class="btn-group" >

              <a class="btn dropdown-toggle" data-toggle="dropdown" href="#">
                please select brand for display: 
                <span class="caret"></span>
              </a>
              <ul class="dropdown-menu">

                <li><a href="Brand_baobo.htm">Blancpain 宝珀</a><li>
                <li><a href="">Bvlgari 宝格丽</a><li>
                <li><a href="">Hublot 宇舶</a><li>
                <li><a href="Brand_wanguo.htm">IWC 万国</a><li>
                <li><a href="Brand_jijia.htm">Jaeger-LeCoultre 积家</a><li>
                <li><a href="Brand_gela.htm">Glashutte 格拉苏蒂</a><li>
                <li><a href="Brand_kadia.htm">Cartier 卡地亚</a><li>
                <li><a href="Brand_omiga.htm">Omega 欧米茄</a><li>
                <li><a href="">Patek Philippe 百达翡丽</a><li>
                <li><a href="">Piaget 伯爵</a><li>
                <li><a href="">TAG Heuer 豪雅</a><li>
                <li><a href="">Tiffany 蒂芙尼</a><li>
                <li><a href="">VanCleef&Arpels 梵克雅宝</a><li>
                <li><a href="Consumer_Compare.htm" >品牌数据对比</a></li>

           </ul>
            </div>

        <script src="http://code.highcharts.com/highcharts.js" type="text/javascript"></script>
        <script src="http://code.highcharts.com/highcharts-more.js"></script>
        <script src="http://code.highcharts.com/modules/exporting.js" type="text/javascript"></script>
        
<div id="container" style="min-width: 400px; height: 400px; margin: 0 auto"></div>
<span class="span7"></span><button id="analysis_btn" type="button" class="btn btn-success"> 分析 </button>
<div id="textfield" style="min-width: 200px; height:200px; margin:0 auto; display:none;"><textarea rows="4" style="min-width:500px"></textarea></div>
<span class="span3"></span>

<span class="span4"></span><button id="suggest_btn" type="button" class="btn btn-success"> 建议 </button>
<div id="suggest" style="min-width: 200px; height:200px; margin:0 auto; display:none;"><textarea rows="4" style="min-width:500px"></textarea></div>
<div id="container1" style="min-width: 400px; height: 400px; margin: 0 auto"></div>
<div id="container4" style="min-width: 400px; height: 400px; margin: 0 auto"></div>

<script type="text/javascript" >
 
//bubble chart
   $("#analysis_btn").click(function() {
     $("#textfield").toggle(1000);
 });
 $("#suggest_btn").click(function() {
     $("#suggest").toggle(1000);
 });
//trends chart
$(function () {
        $('#container1').highcharts({
            chart: {
                type: 'spline'
            },
            title: {
                text: 'Brand Customer Awareness品牌用户关注度'
            },
            
            xAxis: {
                type: 'datetime',
                dateTimeLabelFormats: { // don't display the dummy year
                    month: '%e. %b',
                    year: '%b'
                }
            },
            yAxis: {
                title: {
                    text: 'Click Rate'
                },
                min: 0
                
            },
            tooltip: {
                formatter: function() {
                        return '<b>'+ this.series.name +'</b><br/>'+
                        Highcharts.dateFormat('%e. %b', this.x) +': '+ this.y +' Rates';
                }
            },
            
            series: [{
                name: 'IWC万国 2012-2013',
                // Define the data points. All series have a dummy year
                // of 1970/71 in order to be compared on the same x axis. Note
                // that in JavaScript, months start at 0 for January, 1 for February etc.
                data: [
                   [Date.UTC(2012,0,1),0],
                    [Date.UTC(2012,0,15),0],
                    [Date.UTC(2012,1,1),0],
                    [Date.UTC(2012,1,15),0],
                    [Date.UTC(2012,2,1),0],
                    [Date.UTC(2012,2,15),0],
                    [Date.UTC(2012,3,1),0],
                    [Date.UTC(2012,3,15),0],
                    [Date.UTC(2012,4,1),0],
                    [Date.UTC(2012,4,15),0],
                    [Date.UTC(2012,5,1),0],
                    [Date.UTC(2012,5,15),0],
                    [Date.UTC(2012,6,1),0],
                    [Date.UTC(2012,6,15),0],
                    [Date.UTC(2012,7,1),0],
                    [Date.UTC(2012,7,15),0],
                    [Date.UTC(2012,8,1),0],
                    [Date.UTC(2012,8,15),0],
                    [Date.UTC(2012,9,1),0],
                    [Date.UTC(2012,9,15),0],
                    [Date.UTC(2012,10,1),0],
                    [Date.UTC(2012,10,15),0],
                    [Date.UTC(2012,11,1),0],
                    [Date.UTC(2012,11,15),2614],
                    [Date.UTC(2012,12,1),6747],
                    [Date.UTC(2012,12,15),7718],
                    [Date.UTC(2013,1,1),5692],
                    [Date.UTC(2013,1,15),6470],
                    [Date.UTC(2013,2,1),7551],
                    [Date.UTC(2013,2,15),8268],
                    [Date.UTC(2013,3,1),7556],
                    [Date.UTC(2013,3,15),7454],
                    [Date.UTC(2013,4,1),8600],
                    [Date.UTC(2013,4,15),9968],
                    [Date.UTC(2013,5,1),8813],
                    [Date.UTC(2013,5,15),8447],
                    [Date.UTC(2013,6,1),9134],
                    [Date.UTC(2013,6,15),10422]

                ]
            }
            
            ]
        });
    });
/*
//Master Detail Chart
$(function () {
    var data = [
779,851,831,844,856,675,627,774,848,816,780,849,747,715,799,788,816,843,855,740,734,844,851,847,853,853,679,658,732,763,853,843,834,730,727,789,839,843,843,852,695,743,844,862,710,608,692,830,813,866,846,850,789,845,741,681,782,833,837,828,860,758,634,786,771,783,828,833,676,768,792,797,782,792,844,608,637,734,827,841,760,846,698,633,786,861,695,597,636,791,726,768,777,844,791,853,647,656,693,786,755,743,808,613,552,738,799,760,805,840,775,614,676,564,754,760,805,661,681,751,718,741,840,847,738,732,712,802,772,841,868,715,726,727,746,735,811,843,689,650,718,805,811,848,805,637,737,757,785,823,847,830,569,588,802,774,796,729,712,844,744,547,492,445,391,420,340,288,426,524,529,614,710,543,540,620,682,740,685,735,547,602,681,656,670,701,808,561,552,605,613,628,628,707,484,532,627,682,637,654,600,571,609,645,595,510,403,540,496,501,568,608,603,568,637,512,468,582,676,569,842,713,595,634,744,729,416,535,684,560,549,588,658,605,704,783,580,578,681,658,721,720,849,647,710,857,899,670,640,690,555,490,558,608,614,602,681,642,619,701,696,634,676,707,578,639,627,716,689,738,768,619,746,656,763,755,724,738,710,578,658,754,693,803,791,572,591,648,671,644,693,772,599,554,504,414,504,476,423,416,518,569,535,659,758,822,609,659,715,761,849,849,783,673,633,721,720,732,789,779,690,668,768,769,855,837,786,673,713,761,846,843,857,713,653,628,786,709,709,741,772,594,640,738,685,749,723,772,670,602,754,840,738,735,837,609,605,692,791,755,775,757,599,685,782,806,774,844,843,676,782,856,849,860,856,861,679,600,797,846,830,848,851,738,650,810,844,852,858,854,667,654,851,844,852,869,879,718,625,665,845,847,859,863,783,766,849,852,865,865,893,699,726,843,857,852,840,851,766,671,740,820,771,817,837,645,665,777,782,839,857,843,637,659,830,837,820,845,872,752,707,843,853,860,871,886,833,848,867,863,875,721,665,676,844,844,855,857,855,870,819,744,850,851,849,851,863,811,796,844,854,856,880,894,845,779,864,876,653,718,724,844,845,850,848,847,846,874,730,721,828,843,863,851,865,772,738,853,847,853,846,859,796,723,851,867,853,869,871,777,841,789,797,854,862,862,653,779,849,855,854,844,873,687,692,845,841,853,848,850,704,628,727,850,851,786,792,645,628,768,758,847,786,827,622,481,440,445,375,344,369,281,420,499,538,513,555,602,518,479,585,620,664,658,637,490,496,602,671,637,518,490,445
    ];
    
    var masterChart,
        detailChart;
    
    $(document).ready(function() {
    
    
        // create the master chart
        function createMaster() {
            masterChart = $('#master-container').highcharts({
                chart: {
                    reflow: false,
                    borderWidth: 0,
                    backgroundColor: null,
                    marginLeft: 50,
                    marginRight: 20,
                    zoomType: 'x',
                    events: {
    
                        // listen to the selection event on the master chart to update the
                        // extremes of the detail chart
                        selection: function(event) {
                            var extremesObject = event.xAxis[0],
                                min = extremesObject.min,
                                max = extremesObject.max,
                                detailData = [],
                                xAxis = this.xAxis[0];
    
                            // reverse engineer the last part of the data
                            jQuery.each(this.series[0].data, function(i, point) {
                                if (point.x > min && point.x < max) {
                                    detailData.push({
                                        x: point.x,
                                        y: point.y
                                    });
                                }
                            });
    
                            // move the plot bands to reflect the new detail span
                            xAxis.removePlotBand('mask-before');
                            xAxis.addPlotBand({
                                id: 'mask-before',
                                from: Date.UTC(2006, 0, 1),
                                to: min,
                                color: 'rgba(0, 0, 0, 0.2)'
                            });
    
                            xAxis.removePlotBand('mask-after');
                            xAxis.addPlotBand({
                                id: 'mask-after',
                                from: max,
                                to: Date.UTC(2008, 11, 31),
                                color: 'rgba(0, 0, 0, 0.2)'
                            });
    
    
                            detailChart.series[0].setData(detailData);
    
                            return false;
                        }
                    }
                },
                title: {
                    text: null
                },
                xAxis: {
                    type: 'datetime',
                    showLastTickLabel: true,
                    maxZoom: 14 * 24 * 3600000, // fourteen days
                    plotBands: [{
                        id: 'mask-before',
                        from: Date.UTC(2012, 1, 1),
                        to: Date.UTC(2013, 7, 31),
                        color: 'rgba(0, 0, 0, 0.2)'
                    }],
                    title: {
                        text: null
                    }
                },
                yAxis: {
                    gridLineWidth: 0,
                    labels: {
                        enabled: false
                    },
                    title: {
                        text: null
                    },
                    min: 0.6,
                    showFirstLabel: false
                },
                tooltip: {
                    formatter: function() {
                        return false;
                    }
                },
                legend: {
                    enabled: false
                },
                credits: {
                    enabled: false
                },
                plotOptions: {
                    series: {
                        fillColor: {
                            linearGradient: [0, 0, 0, 70],
                            stops: [
                                [0, '#4572A7'],
                                [1, 'rgba(0,0,0,0)']
                            ]
                        },
                        lineWidth: 1,
                        marker: {
                            enabled: false
                        },
                        shadow: false,
                        states: {
                            hover: {
                                lineWidth: 1
                            }
                        },
                        enableMouseTracking: false
                    }
                },
    
                series: [{
                    type: 'area',
                    name: 'Brand Customer Awareness 品牌用户关注度全年详细数据',
                    pointInterval: 24 * 3600 * 1000,
                    pointStart: Date.UTC(2012, 01, 01),
                    data: data
                }],
    
                exporting: {
                    enabled: false
                }
    
            }, function(masterChart) {
                createDetail(masterChart)
            })
            .highcharts(); // return chart instance
        }
    
        // create the detail chart
        function createDetail(masterChart) {
    
            // prepare the detail chart
            var detailData = [],
                detailStart = Date.UTC(2013, 1, 1);
    
            jQuery.each(masterChart.series[0].data, function(i, point) {
                if (point.x >= detailStart) {
                    detailData.push(point.y);
                }
            });
    
            // create a detail chart referenced by a global variable
            detailChart = $('#detail-container').highcharts({
                chart: {
                    marginBottom: 120,
                    reflow: false,
                    marginLeft: 50,
                    marginRight: 20,
                    style: {
                        position: 'absolute'
                    }
                },
                credits: {
                    enabled: false
                },
                title: {
                    text: 'Brand Popularity 品牌热度 2012-2013'
                },
                subtitle: {
                    text: 'Select an area by dragging across the lower chart'
                },
                xAxis: {
                    type: 'datetime'
                },
                yAxis: {
                    title: {
                        text: null
                    },
                    maxZoom: 0.1
                },
                tooltip: {
                    formatter: function() {
                        var point = this.points[0];
                        return '<b>'+ point.series.name +'</b><br/>'+
                            Highcharts.dateFormat('%A %B %e %Y', this.x) + ':<br/>'+
                            '关注度： '+Highcharts.numberFormat(point.y, 2) +'';
                    },
                    shared: true
                },
                legend: {
                    enabled: false
                },
                plotOptions: {
                    series: {
                        marker: {
                            enabled: false,
                            states: {
                                hover: {
                                    enabled: true,
                                    radius: 3
                                }
                            }
                        }
                    }
                },
                series: [{
                    name: 'Brand Customer Awareness品牌用户关注度',
                    pointStart: detailStart,
                    pointInterval: 24 * 3600 * 1000,
                    data: detailData
                }],
    
                exporting: {
                    enabled: false
                }
    
            }).highcharts(); // return chart
        }
    
        // make the container smaller and add a second container for the master chart
        var $container = $('#container2')
            .css('position', 'relative');
    
        var $detailContainer = $('<div id="detail-container">')
            .appendTo($container);
    
        var $masterContainer = $('<div id="master-container">')
            .css({ position: 'absolute', top: 300, height: 80, width: '100%' })
            .appendTo($container);
    
        // create master and in its callback, create the detail chart
        createMaster();
    });
    
});

*/
    //spider web chart
$(function () {

    $('#container').highcharts({
                
        chart: {
            polar: true,
            type: 'line'
        },
        
        title: {
            text: 'Brand Analysis 品牌自我定位',
            x: -80
        },
        
        pane: {
            size: '80%'
        },
        
        xAxis: {
            categories: ['优雅','激情','运动','奢华','年轻','经典','创新'],
            tickmarkPlacement: 'on',
            lineWidth: 0
        },
            
        yAxis: {
            gridLineInterpolation: 'polygon',
            lineWidth: 0,
            min: 0
        },
        
        tooltip: {
            shared: true,
            pointFormat: '<span style="color:{series.color}">{series.name}: <b>${point.y:,.0f}</b><br/>'
        },
        
        legend: {
            align: 'right',
            verticalAlign: 'top',
            y: 100,
            layout: 'vertical'
        },
        
        series: [{
            name: '万国',
            data: [88,36,459,47,20,171,152],
            pointPlacement: 'on'
        }]
    
    });
});
    
    //动态图
    $(function () {
        $(document).ready(function () {
            Highcharts.setOptions({
                global: {
                    useUTC: false
                }
            });

            var chart;
            $('#container4').highcharts({
                chart: {
                    type: 'spline',
                    animation: Highcharts.svg, // don't animate in old IE
                    marginRight: 10,
                    events: {
                        load: function () {

                            // set up the updating of the chart each second
                            var series = this.series[0];
                            setInterval(function () {
                                var x = (new Date()).getTime(), // current time
                                    y = Math.random();
                                series.addPoint([x, y], true, true);
                            }, 1000);
                        }
                    }
                },
                title: {
                    text: 'Live data for every band'
                },
                xAxis: {
                    type: 'datetime',
                    tickPixelInterval: 150
                },
                yAxis: {
                    title: {
                        text: 'Value'
                    },
                    plotLines: [{
                        value: 0,
                        width: 1,
                        color: '#808080'
                    }]
                },
                tooltip: {
                    formatter: function () {
                        return '<b>' + this.series.name + '</b><br/>' +
                        Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) + '<br/>' +
                        Highcharts.numberFormat(this.y, 2);
                    }
                },
                legend: {
                    enabled: false
                },
                exporting: {
                    enabled: false
                },
                series: [{
                    name: 'Random data',
                    data: (function () {
                        // generate an array of random data
                        var data = [],
                            time = (new Date()).getTime(),
                            i;

                        for (i = -19; i <= 0; i++) {
                            data.push({
                                x: time + i * 1000,
                                y: Math.random()
                            });
                        }
                        return data;
                    })()
                }]
            });
        });

    });
    



</script>

    </body>
</html>
